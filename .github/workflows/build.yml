name: Build and Release

on:
  push:
    branches: [ github-actions-automation ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Python (required by gvsbuild)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install gvsbuild
        run: |
          python -m pip install --upgrade pip
          pip install gvsbuild

      - name: Build GTK (if not already built)
        run: |
          if (-Not (Test-Path "C:\gtk-build")) {
            gvsbuild build gtk3
          }

      - name: Configure with CMake
        run: |
          cmake -S . -B build -G "NMake Makefiles" -DCMAKE_PREFIX_PATH="C:/gtk-build"

      - name: Build project
        run: cmake --build build

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/**

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgtk-3-dev

      - name: Configure with CMake
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/**

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release/windows

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release/linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.sha }}
          tag_name: ${{ github.sha }}
          files: |
            release/windows/**
            release/linux/**
